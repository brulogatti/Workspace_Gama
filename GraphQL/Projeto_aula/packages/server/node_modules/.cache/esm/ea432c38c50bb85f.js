let rejects,readFile,writeFile,resolve;_c50‍.x([["default",()=>_c50‍.o]]);_c50‍.w("assert",[["rejects",["rejects"],function(v){rejects=v}]]);_c50‍.w("fs",[["readFile",["readFile"],function(v){readFile=v}],["writeFile",["writeFile"],function(v){writeFile=v}]]);_c50‍.w("path",[["resolve",["resolve"],function(v){resolve=v}]]);



function createRepository(name){
    const path = resolve(__dirname, `../../data/${name}.json`)
    return{
        read: () => new Promise((resolve,reject) => {
            readFile(path, (error, data)=>{
                if(error){
                    reject(error);
                    return;
                }
                resolve(JSON.parse(data));
            })
        }),
        write: (data)=> new Promise(() => {
            writeFile(path, JSON.stringify(data), (error)=>{
                if(error){
                    reject(error);
                    return;
                }
                resolve();
            })
        })
    }
}

_c50‍.d(createRepository);