let gql,createRepository;_9bc‍.x([["typeDefs",()=>typeDefs],["resolvers",()=>resolvers]]);_9bc‍.w("apollo-server-express",[["gql",["gql"],function(v){gql=v}]]);_9bc‍.w("../../io/Database/createRepository",[["default",["createRepository"],function(v){createRepository=v}]]);


const clientRepository = createRepository('client');

       const typeDefs = gql`
    type Client implements Node{
        id: ID!
        name: String!
        email: String!
        disabled: Boolean!
    }

    type ClientList implements List{
        items: [Client!]!
        totalItems: Int!

    }

    extend type Query{
        client(id:ID!): Client
        clients: [Client!]!
    }

`;

       const resolvers={
    Query: {
        client: async ( _, {id}) => {
            const clients = await clientRepository.read();
            return clients.find(client => client.id === id );
        },
        clients: async ( ) => {
            const clients = await clientRepository.read();
            return {
                items: clients,
                totalItens: clients.length
            };
        },
    },
};

